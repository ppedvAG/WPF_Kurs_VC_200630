<Window x:Class="Templates.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Templates"
        mc:Ignorable="d"
        Title="MainWindow" Height="505.449" Width="371.198">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Background" Value="Aqua"/>
            <Setter Property="Template">
                <!--ControlTemplates definieren ein vollständig neues Layout für bestehende Elemente.
                        Hierbei können alle Controlls und Container verwendet werden. Die Zuweisung zu den Elementen
                        erfolgt über deren Template-Property und den Key des Templates. Die Bindung von Propeties an
                        Properties des Elements erfolgt über ein TemplateBinding - vgl. auch App.xaml-->
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="DeepSkyBlue" BorderThickness="2" CornerRadius="50"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                Background="{TemplateBinding Background}">
                            <!--Statt dem ContentPresenter kann z.B. ein TextBlock verwendet werden, wenn auf speziele Eigenschaften,
                                    wie z.B. die FontSize eingegangen werden soll-->
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>

                        <!--Trigger definieren veränderte Properties, wenn bestimmte Zustände eintreten-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="DarkBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--Der DataContext eines Elements (Window / Panel / ...)  ist ein Satz von Daten an dessen Eigenschaften die Properties dieses Elements
            bzw. der Unterelemente durch vereinfachte Bindung [Syntax: Binding DatenName] verknüpt werden können. Dieser DataContext kann ein
            instanziiertes Objekt sein, eine Liste von Objekten oder z.B. das Window selber.-->
    <Window.DataContext>
        <local:Person Vorname="Maria" Nachname="Schmidt" Alter="44"/>
    </Window.DataContext>
        
    <StackPanel>
        <Button Content="Hallo" Height="100" Width="100" FontSize="20" Click="Button_Click"/>
        
        <!--Kurzbindungen an den DataContext-->
        <TextBlock Text="{Binding Vorname}"/>
        <TextBlock Text="{Binding Nachname}"/>
        <TextBlock Text="{Binding Alter}"/>
        <Button Content="Altern" Click="Button_Click_1"/>

        <ListBox x:Name="Lbx_Personen">
            <ListBox.ItemTemplate>
                <!--DataTemplates sind Vorlagen für das Layout von Items in ItemControls (z.B. ListView). Die Bindung erfolgt über die
                    ItemSource des Zielelements.-->
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Vorname}"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding Nachname}"/>
                        <TextBlock Text=" ("/>
                        <TextBlock Text="{Binding Alter}"/>
                        <TextBlock Text=")"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Content="Neue Person" Click="Button_Click_2"/>
        <Button Content="Zeige Person" Click="Button_Click_3"/>
    </StackPanel>
</Window>
